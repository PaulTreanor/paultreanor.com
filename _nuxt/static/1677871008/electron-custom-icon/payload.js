__NUXT_JSONP__("/electron-custom-icon", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z){return {data:[{article:{slug:"electron-custom-icon",title:I,short:"A guide to adding personalized icons to electron apps on Mac",date:"2 February 2023",createdAt:"2023-02-02T00:00:00.000Z",img:"blog-2.jpg",tags:["Code"],toc:[{id:J,depth:r,text:K},{id:L,depth:r,text:M},{id:N,depth:r,text:O},{id:P,depth:r,text:Q}],body:{type:"root",children:[{type:b,tag:"h1",props:{id:"adding-custom-electron-app-icons-on-mac-with-electron-build"},children:[{type:b,tag:g,props:{href:"#adding-custom-electron-app-icons-on-mac-with-electron-build",ariaHidden:n,tabIndex:o},children:[{type:b,tag:c,props:{className:[p,q]},children:[]}]},{type:a,value:I}]},{type:a,value:d},{type:b,tag:s,props:{id:J},children:[{type:b,tag:g,props:{href:"#setting-up-an-electron-app-using-react-and-electron-build",ariaHidden:n,tabIndex:o},children:[{type:b,tag:c,props:{className:[p,q]},children:[]}]},{type:a,value:K}]},{type:a,value:d},{type:b,tag:R,props:{},children:[{type:a,value:d},{type:b,tag:t,props:{},children:[{type:a,value:"You can set up a simple Electron app that uses electron-build by following "},{type:b,tag:g,props:{href:"https:\u002F\u002Fblog.devgenius.io\u002Fhow-to-build-and-publish-an-electron-app-with-react-tutorial-971e1d9d27ce",rel:[x,y,z],target:A},children:[{type:a,value:"this blog post"}]},{type:a,value:B}]},{type:a,value:d},{type:b,tag:t,props:{},children:[{type:a,value:"Remove the Windows build code from "},{type:b,tag:f,props:{},children:[{type:a,value:C}]},{type:a,value:". Your "},{type:b,tag:f,props:{},children:[{type:a,value:"package"}]},{type:a,value:" and "},{type:b,tag:f,props:{},children:[{type:a,value:"publish"}]},{type:a,value:" scripts should look like this:"}]},{type:a,value:d}]},{type:a,value:d},{type:b,tag:D,props:{className:[E]},children:[{type:b,tag:F,props:{className:[G,S]},children:[{type:b,tag:f,props:{},children:[{type:b,tag:c,props:{className:[e,j]},children:[{type:a,value:"\"scripts\""}]},{type:b,tag:c,props:{className:[e,k]},children:[{type:a,value:l}]},{type:a,value:m},{type:b,tag:c,props:{className:[e,h]},children:[{type:a,value:T}]},{type:a,value:u},{type:b,tag:c,props:{className:[e,j]},children:[{type:a,value:"\"package\""}]},{type:b,tag:c,props:{className:[e,k]},children:[{type:a,value:l}]},{type:a,value:m},{type:b,tag:c,props:{className:[e,v]},children:[{type:a,value:"\"electron-builder build --mac -c.extraMetadata.main=build\u002Felectron.js --publish never\""}]},{type:b,tag:c,props:{className:[e,h]},children:[{type:a,value:w}]},{type:a,value:u},{type:b,tag:c,props:{className:[e,j]},children:[{type:a,value:"\"publish\""}]},{type:b,tag:c,props:{className:[e,k]},children:[{type:a,value:l}]},{type:a,value:m},{type:b,tag:c,props:{className:[e,v]},children:[{type:a,value:"\"electron-builder build --mac --publish always\""}]},{type:a,value:d},{type:b,tag:c,props:{className:[e,h]},children:[{type:a,value:U}]},{type:b,tag:c,props:{className:[e,h]},children:[{type:a,value:w}]},{type:a,value:d}]}]}]},{type:a,value:d},{type:b,tag:R,props:{},children:[{type:a,value:d},{type:b,tag:t,props:{},children:[{type:a,value:"Remove the "},{type:b,tag:f,props:{},children:[{type:a,value:"win"}]},{type:a,value:" key from the "},{type:b,tag:f,props:{},children:[{type:a,value:V}]},{type:a,value:" section of "},{type:b,tag:f,props:{},children:[{type:a,value:C}]}]},{type:a,value:d},{type:b,tag:t,props:{},children:[{type:a,value:"Add "},{type:b,tag:f,props:{},children:[{type:a,value:W}]},{type:a,value:" to your "},{type:b,tag:f,props:{},children:[{type:a,value:".gitingore file"}]}]},{type:a,value:d}]},{type:a,value:d},{type:b,tag:s,props:{id:L},children:[{type:b,tag:g,props:{href:"#building-and-packaging-the-app",ariaHidden:n,tabIndex:o},children:[{type:b,tag:c,props:{className:[p,q]},children:[]}]},{type:a,value:M}]},{type:a,value:d},{type:b,tag:i,props:{},children:[{type:a,value:"Launch the electron app by running the following commands:"}]},{type:a,value:d},{type:b,tag:D,props:{className:[E]},children:[{type:b,tag:F,props:{className:[G,"language-bash"]},children:[{type:b,tag:f,props:{},children:[{type:b,tag:c,props:{className:[e,X]},children:[{type:a,value:Y}]},{type:a,value:" run build\n"},{type:b,tag:c,props:{className:[e,X]},children:[{type:a,value:Y}]},{type:a,value:" run package\n"}]}]}]},{type:a,value:d},{type:b,tag:i,props:{},children:[{type:a,value:"This will output an application as a "},{type:b,tag:f,props:{},children:[{type:a,value:".dmg"}]},{type:a,value:" file in the project's "},{type:b,tag:f,props:{},children:[{type:a,value:W}]},{type:a,value:" directory. Double click the file to launch the app."}]},{type:a,value:d},{type:b,tag:H,props:{src:"\u002Felectron-1.png",alt:"App in file explorer"},children:[]},{type:a,value:d},{type:b,tag:i,props:{},children:[{type:a,value:"Notice that the app is currently using the default electron icon.\n"},{type:b,tag:H,props:{src:"\u002Felectron-2.png",alt:"App with default icon"},children:[]}]},{type:a,value:d},{type:b,tag:s,props:{id:N},children:[{type:b,tag:g,props:{href:"#creating-a-suitable-icon",ariaHidden:n,tabIndex:o},children:[{type:b,tag:c,props:{className:[p,q]},children:[]}]},{type:a,value:O}]},{type:a,value:d},{type:b,tag:i,props:{},children:[{type:a,value:"MacOS requires icons to be 512x512px and in the "},{type:b,tag:f,props:{},children:[{type:a,value:Z}]},{type:a,value:" format. You can convert other image formats to "},{type:b,tag:f,props:{},children:[{type:a,value:Z}]},{type:a,value:" using "},{type:b,tag:g,props:{href:"https:\u002F\u002Fcloudconvert.com\u002Fpng-to-icns",rel:[x,y,z],target:A},children:[{type:a,value:"cloudconvert"}]},{type:a,value:B}]},{type:a,value:d},{type:b,tag:s,props:{id:P},children:[{type:b,tag:g,props:{href:"#adding-a-custom-icon",ariaHidden:n,tabIndex:o},children:[{type:b,tag:c,props:{className:[p,q]},children:[]}]},{type:a,value:Q}]},{type:a,value:d},{type:b,tag:i,props:{},children:[{type:a,value:"Create a directory called "},{type:b,tag:f,props:{},children:[{type:a,value:"resources"}]},{type:a,value:" and place your icon into it. Then add the following configuration the "},{type:b,tag:f,props:{},children:[{type:a,value:V}]},{type:a,value:" key of the your "},{type:b,tag:f,props:{},children:[{type:a,value:C}]},{type:a,value:B}]},{type:a,value:d},{type:b,tag:D,props:{className:[E]},children:[{type:b,tag:F,props:{className:[G,S]},children:[{type:b,tag:f,props:{},children:[{type:b,tag:c,props:{className:[e,j]},children:[{type:a,value:"\"directories\""}]},{type:b,tag:c,props:{className:[e,k]},children:[{type:a,value:l}]},{type:a,value:m},{type:b,tag:c,props:{className:[e,h]},children:[{type:a,value:T}]},{type:a,value:u},{type:b,tag:c,props:{className:[e,j]},children:[{type:a,value:"\"buildResources\""}]},{type:b,tag:c,props:{className:[e,k]},children:[{type:a,value:l}]},{type:a,value:m},{type:b,tag:c,props:{className:[e,v]},children:[{type:a,value:"\"resources\""}]},{type:b,tag:c,props:{className:[e,h]},children:[{type:a,value:w}]},{type:a,value:u},{type:b,tag:c,props:{className:[e,j]},children:[{type:a,value:"\"output\""}]},{type:b,tag:c,props:{className:[e,k]},children:[{type:a,value:l}]},{type:a,value:m},{type:b,tag:c,props:{className:[e,v]},children:[{type:a,value:"\"dist\""}]},{type:a,value:d},{type:b,tag:c,props:{className:[e,h]},children:[{type:a,value:U}]},{type:b,tag:c,props:{className:[e,h]},children:[{type:a,value:w}]},{type:a,value:d}]}]}]},{type:a,value:d},{type:b,tag:i,props:{},children:[{type:a,value:"Now if you build and package the application again, it should include your custom icon."}]},{type:a,value:d},{type:b,tag:H,props:{src:"\u002Felectron-3.png",alt:"App with new icon"},children:[]},{type:a,value:d},{type:b,tag:i,props:{},children:[{type:a,value:"The code for this complete demo is in "},{type:b,tag:g,props:{href:"https:\u002F\u002Fgithub.com\u002FPaulTreanor\u002Felectron-build-icon-demo",rel:[x,y,z],target:A},children:[{type:a,value:"this GitHub repository."}]}]}]},dir:"\u002Fblog",path:"\u002Fblog\u002Felectron-custom-icon",extension:".md",updatedAt:"2023-03-03T19:15:42.417Z",bodyHtml:"\u003Ch1 id=\"adding-custom-electron-app-icons-on-mac-with-electron-build\"\u003E\u003Ca href=\"#adding-custom-electron-app-icons-on-mac-with-electron-build\" aria-hidden=\"true\" tabindex=\"-1\"\u003E\u003Cspan class=\"icon icon-link\"\u003E\u003C\u002Fspan\u003E\u003C\u002Fa\u003EAdding custom electron app icons on Mac with electron-build\u003C\u002Fh1\u003E\n\u003Ch3 id=\"setting-up-an-electron-app-using-react-and-electron-build\"\u003E\u003Ca href=\"#setting-up-an-electron-app-using-react-and-electron-build\" aria-hidden=\"true\" tabindex=\"-1\"\u003E\u003Cspan class=\"icon icon-link\"\u003E\u003C\u002Fspan\u003E\u003C\u002Fa\u003ESetting up an Electron app using React and electron-build\u003C\u002Fh3\u003E\n\u003Cul\u003E\n\u003Cli\u003EYou can set up a simple Electron app that uses electron-build by following \u003Ca href=\"https:\u002F\u002Fblog.devgenius.io\u002Fhow-to-build-and-publish-an-electron-app-with-react-tutorial-971e1d9d27ce\" rel=\"nofollow noopener noreferrer\" target=\"_blank\"\u003Ethis blog post\u003C\u002Fa\u003E.\u003C\u002Fli\u003E\n\u003Cli\u003ERemove the Windows build code from \u003Ccode\u003Epackage.json\u003C\u002Fcode\u003E. Your \u003Ccode\u003Epackage\u003C\u002Fcode\u003E and \u003Ccode\u003Epublish\u003C\u002Fcode\u003E scripts should look like this:\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cdiv class=\"nuxt-content-highlight\"\u003E\u003Cpre class=\"line-numbers language-json\"\u003E\u003Ccode\u003E\u003Cspan class=\"token property\"\u003E\"scripts\"\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token property\"\u003E\"package\"\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E\"electron-builder build --mac -c.extraMetadata.main=build\u002Felectron.js --publish never\"\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token property\"\u003E\"publish\"\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E\"electron-builder build --mac --publish always\"\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\n\u003Cul\u003E\n\u003Cli\u003ERemove the \u003Ccode\u003Ewin\u003C\u002Fcode\u003E key from the \u003Ccode\u003Ebuild\u003C\u002Fcode\u003E section of \u003Ccode\u003Epackage.json\u003C\u002Fcode\u003E\u003C\u002Fli\u003E\n\u003Cli\u003EAdd \u003Ccode\u003E\u002Fdist\u003C\u002Fcode\u003E to your \u003Ccode\u003E.gitingore file\u003C\u002Fcode\u003E\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Ch3 id=\"building-and-packaging-the-app\"\u003E\u003Ca href=\"#building-and-packaging-the-app\" aria-hidden=\"true\" tabindex=\"-1\"\u003E\u003Cspan class=\"icon icon-link\"\u003E\u003C\u002Fspan\u003E\u003C\u002Fa\u003EBuilding and packaging the app\u003C\u002Fh3\u003E\n\u003Cp\u003ELaunch the electron app by running the following commands:\u003C\u002Fp\u003E\n\u003Cdiv class=\"nuxt-content-highlight\"\u003E\u003Cpre class=\"line-numbers language-bash\"\u003E\u003Ccode\u003E\u003Cspan class=\"token function\"\u003Enpm\u003C\u002Fspan\u003E run build\n\u003Cspan class=\"token function\"\u003Enpm\u003C\u002Fspan\u003E run package\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\n\u003Cp\u003EThis will output an application as a \u003Ccode\u003E.dmg\u003C\u002Fcode\u003E file in the project's \u003Ccode\u003E\u002Fdist\u003C\u002Fcode\u003E directory. Double click the file to launch the app.\u003C\u002Fp\u003E\n\u003Cimg src=\"\u002Felectron-1.png\" alt=\"App in file explorer\"\u003E\n\u003Cp\u003ENotice that the app is currently using the default electron icon.\n\u003Cimg src=\"\u002Felectron-2.png\" alt=\"App with default icon\"\u003E\u003C\u002Fp\u003E\n\u003Ch3 id=\"creating-a-suitable-icon\"\u003E\u003Ca href=\"#creating-a-suitable-icon\" aria-hidden=\"true\" tabindex=\"-1\"\u003E\u003Cspan class=\"icon icon-link\"\u003E\u003C\u002Fspan\u003E\u003C\u002Fa\u003ECreating a suitable icon\u003C\u002Fh3\u003E\n\u003Cp\u003EMacOS requires icons to be 512x512px and in the \u003Ccode\u003E.icns\u003C\u002Fcode\u003E format. You can convert other image formats to \u003Ccode\u003E.icns\u003C\u002Fcode\u003E using \u003Ca href=\"https:\u002F\u002Fcloudconvert.com\u002Fpng-to-icns\" rel=\"nofollow noopener noreferrer\" target=\"_blank\"\u003Ecloudconvert\u003C\u002Fa\u003E.\u003C\u002Fp\u003E\n\u003Ch3 id=\"adding-a-custom-icon\"\u003E\u003Ca href=\"#adding-a-custom-icon\" aria-hidden=\"true\" tabindex=\"-1\"\u003E\u003Cspan class=\"icon icon-link\"\u003E\u003C\u002Fspan\u003E\u003C\u002Fa\u003EAdding a custom icon\u003C\u002Fh3\u003E\n\u003Cp\u003ECreate a directory called \u003Ccode\u003Eresources\u003C\u002Fcode\u003E and place your icon into it. Then add the following configuration the \u003Ccode\u003Ebuild\u003C\u002Fcode\u003E key of the your \u003Ccode\u003Epackage.json\u003C\u002Fcode\u003E.\u003C\u002Fp\u003E\n\u003Cdiv class=\"nuxt-content-highlight\"\u003E\u003Cpre class=\"line-numbers language-json\"\u003E\u003Ccode\u003E\u003Cspan class=\"token property\"\u003E\"directories\"\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token property\"\u003E\"buildResources\"\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E\"resources\"\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token property\"\u003E\"output\"\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E\"dist\"\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\n\u003Cp\u003ENow if you build and package the application again, it should include your custom icon.\u003C\u002Fp\u003E\n\u003Cimg src=\"\u002Felectron-3.png\" alt=\"App with new icon\"\u003E\n\u003Cp\u003EThe code for this complete demo is in \u003Ca href=\"https:\u002F\u002Fgithub.com\u002FPaulTreanor\u002Felectron-build-icon-demo\" rel=\"nofollow noopener noreferrer\" target=\"_blank\"\u003Ethis GitHub repository.\u003C\u002Fa\u003E\u003C\u002Fp\u003E"}}],fetch:{},mutations:void 0}}("text","element","span","\n","token","code","a","punctuation","p","property","operator",":"," ","true",-1,"icon","icon-link",3,"h3","li","\n    ","string",",","nofollow","noopener","noreferrer","_blank",".","package.json","div","nuxt-content-highlight","pre","line-numbers","img","Adding custom electron app icons on Mac with electron-build","setting-up-an-electron-app-using-react-and-electron-build","Setting up an Electron app using React and electron-build","building-and-packaging-the-app","Building and packaging the app","creating-a-suitable-icon","Creating a suitable icon","adding-a-custom-icon","Adding a custom icon","ul","language-json","{","}","build","\u002Fdist","function","npm",".icns")));